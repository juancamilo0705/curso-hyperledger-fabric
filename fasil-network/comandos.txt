# Crear material cryptografico

cryptogen generate --config=./crypto-config.yaml

# Creaci贸n de bloque genesis y transacciones de configuraciones


configtxgen -profile FasilOrdererGenesis -channelID system-channel -outputBlock ./channel-artifacts/genesis.block

# Creaci贸n del canal

configtxgen -profile FasilChannel -outputCreateChannelTx ./channel-artifacts/channel.tx -channelID fasil-channel

# Creaci贸n de anchor peers

configtxgen -profile FasilChannel -outputAnchorPeersUpdate ./channel-artifacts/FasilOrgMSPanchors.tx -channelID fasil-channel -asOrg FasilOrg

# Variables de entorno
export FABRIC_CFG_PATH=$PWD

export CHANNEL_NAME=fasil-channel
export VERBOSE=false
export FABRIC_CFG_PATH=/etc/hyperledger/fabric/
export ORDERER_CA=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/esfasil.com/msp/tlscacerts/tlsca.esfasil.com-cert.pem



docker volume create portainer_data
docker run -d -p 8000:8000 -p 9000:9000 -v /var/run/docker.sock:/var/run/docker.sock -v portainer_data:/data portainer/portainer

# Crear canal

peer channel create -o orderer.esfasil.com:7050 -c $CHANNEL_NAME -f ./channel-artifacts/channel.tx --tls true --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/esfasil.com/msp/tlscacerts/tlsca.esfasil.com-cert.pem 

# Couch DB

http://localhost:5984/_utils/#login

# Unirse al canal
peer channel join -b fasil-channel.block

#Configurar anchor peer para el channel
peer channel update -o orderer.esfasil.com:7050 -c $CHANNEL_NAME -f ./channel-artifacts/FasilOrgMSPanchors.tx --tls true --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/esfasil.com/msp/tlscacerts/tlsca.esfasil.com-cert.pem


#Variables utiles para instalaci贸n de contratos inteligentes

export CHANNEL_NAME=fasil-channel
export CHAINCODE_NAME=foodcontrol
export CHAINCODE_VERSION=1
export CC_RUNTIME_LANGUAGE=golang
export CC_SRC_PATH="../../../chaincode/$CHAINCODE_NAME/"
export ORDERER_CA=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/esfasil.com/msp/tlscacerts/tlsca.esfasil.com-cert.pem

#Empaqueta chaincode
peer lifecycle chaincode package ${CHAINCODE_NAME}.tar.gz --path ${CC_SRC_PATH} --lang ${CC_RUNTIME_LANGUAGE} --label ${CHAINCODE_NAME}_${CHAINCODE_VERSION} >&log.txt


#Instalar chaincode
peer lifecycle chaincode install foodcontrol.tar.gz 

#El chaincode genera un hash

export CC_PACKAGEID=3bb63d5460a2fd7bb991090accf37ea4ce3992a2ce79a17ccd7d21889146c399


#Endorsment policy 
peer lifecycle chaincode approveformyorg --tls --cafile $ORDERER_CA --channelID $CHANNEL_NAME --name $CHAINCODE_NAME --version $CHAINCODE_VERSION --sequence 1 --waitForEvent --signature-policy "OR ('FasilOrgMSP.peer')" --package-id foodcontrol_1:$CC_PACKAGEID


#Commit  the chaincode  for FasilOrg
peer lifecycle chaincode checkcommitreadiness --channelID $CHANNEL_NAME --name $CHAINCODE_NAME --version $CHAINCODE_VERSION --sequence 1 --signature-policy "OR ('FasilOrgMSP.peer')" --output json

#commit chaincode
peer lifecycle chaincode commit -o orderer.esfasil.com:7050 --tls --cafile $ORDERER_CA  --peerAddresses peer0.org1.esfasil.com:7051 --tlsRootCertFiles /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.esfasil.com/peers/peer0.org1.esfasil.com/tls/ca.crt --channelID $CHANNEL_NAME --name $CHAINCODE_NAME --version $CHAINCODE_VERSION --sequence 1 --signature-policy "OR ('FasilOrgMSP.peer')"

#Ejecutar contrato inteligente

peer chaincode invoke -o orderer.esfasil.com:7050 --tls --cafile $ORDERER_CA -C  $CHANNEL_NAME  -n $CHAINCODE_NAME -c '{"Args":["Set","did:3","juan","banana"]}'

#Ejecutar consulta sobre el contrato
peer chaincode query -C $CHANNEL_NAME -n $CHAINCODE_NAME -c '{"Args":["Query","did:3"]}'
